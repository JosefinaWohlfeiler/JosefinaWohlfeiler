############   featureCounts



#  featureCounts program is designed to assign mapped reads or fragments (paired-end data) to genomic features such as genes, exons and promoters.


###### TENGO QUE USAR LOS ALINEAMIENTOS Aligned.sortedByCoord.out.bam




#me voy a /dcdata2/nuevo/

#luego a R



#  crear un vector con todos los bam files 


# B5

bamB5 <- c("B51-1_S42/B51-1_S42Aligned.sortedByCoord.out.bam", "B51-B1_S23/B51-B1_S23Aligned.sortedByCoord.out.bam", "B51-B_S9/B51-B_S9Aligned.sortedByCoord.out.bam", "B51_S8/B51_S8Aligned.sortedByCoord.out.bam", "B52-1_S24/B52-1_S24Aligned.sortedByCoord.out.bam", "B52-B1_S43/B52-B1_S43Aligned.sortedByCoord.out.bam", "B52_S10/B52_S10Aligned.sortedByCoord.out.bam", "B53-1_S25/B53-1_S25Aligned.sortedByCoord.out.bam", "B53-B1_S45/B53-B1_S45Aligned.sortedByCoord.out.bam", "B53-B_S11/B53-B_S11Aligned.sortedByCoord.out.bam", "B53_S44/B53_S44Aligned.sortedByCoord.out.bam", "B54-2_S46/B54-2_S46Aligned.sortedByCoord.out.bam", "B54_S12/B54_S12Aligned.sortedByCoord.out.bam", "B5T-1_S26/B5T-1_S26Aligned.sortedByCoord.out.bam", "B5T-B_S48/B5T-B_S48Aligned.sortedByCoord.out.bam", "B5T-C_S13/B5T-C_S13Aligned.sortedByCoord.out.bam", "B5T_S47/B5T_S47Aligned.sortedByCoord.out.bam")

# CR

bamCR <- c("CR1-1_S50/CR1-1_S50Aligned.sortedByCoord.out.bam", "CR1-B1_S14/CR1-B1_S14Aligned.sortedByCoord.out.bam", "CR1-B_S51/CR1-B_S51Aligned.sortedByCoord.out.bam", "CR1_S49/CR1_S49Aligned.sortedByCoord.out.bam", "CR2-1_S27/CR2-1_S27Aligned.sortedByCoord.out.bam", "CR2-B_S52/CR2-B_S52Aligned.sortedByCoord.out.bam", "CR2-E_S53/CR2-E_S53Aligned.sortedByCoord.out.bam", "CR2_S15/CR2_S15Aligned.sortedByCoord.out.bam", "CR3-B1_S28/CR3-B1_S28Aligned.sortedByCoord.out.bam", "CR3-B_S54/CR3-B_S54Aligned.sortedByCoord.out.bam", "CR3_S16/CR3_S16Aligned.sortedByCoord.out.bam", "CRT-1_S29/CRT-1_S29Aligned.sortedByCoord.out.bam", "CRT-B1_S18/CRT-B1_S18Aligned.sortedByCoord.out.bam", "CRT-B_S17/CRT-B_S17Aligned.sortedByCoord.out.bam")




#Read summarization


# en una screen de /dcdata2/nuevo/

library(Rsubread)


fcB5 <- featureCounts(files=bamB5, annot.ext="stringtie/stringtie.gtf", isGTFAnnotationFile=TRUE, GTF.featureType="exon","transcript", GTF.attrType="transcript_id", allowMultiOverlap=TRUE, countMultiMappingReads=TRUE, isPairedEnd=TRUE, nthreads=10)

# lo deje corriendo 21 julio 12.30 pm




# en otra screen de /dcdata2/nuevo/

library(Rsubread)

fcCR <- featureCounts(files=bamCR, annot.ext="stringtie/stringtie.gtf", isGTFAnnotationFile=TRUE, GTF.featureType="exon","transcript", GTF.attrType="transcript_id", allowMultiOverlap=TRUE, countMultiMappingReads=TRUE, isPairedEnd=TRUE, nthreads=10)


### deje corriendo 23 julio 20.20 hs


#cuando terminen hacer q() y guardar cambios "yes" en los dos






###############################             primero hago el analisis con B5



#usar targetB5 y leerlo en R
targetB5 <- read.delim(file= "targetB5", header=TRUE, sep="")

#ver la lista que me da
str(fcB5)
options(digits=20)
fcB5$stat


nrow(fcB5$counts)
#[1] 98246


###########################################   edgeR y limma  



#Create a DGEList object


library(limma)
library(edgeR)


xb5 <- DGEList(counts=fcB5$counts, genes=fcB5$annotation[,c("GeneID","Length")])

###  mirar la tabla

head(xb5)

class(xb5)

#[1] "DGEList"
#attr(,"package")
#[1] "edgeR"



nrow(fcB5$counts)
#98246

dim(xb5)
#[[1] 98246    17  #son 17 muestras de B5



#Filtering. Only keep in the analysis those genes which had >10 reads per million mapped reads in at least two libraries.

isexpr <- rowSums(cpm(xb5) > 10) >= 2

summary(isexpr)

#   Mode   FALSE    TRUE 
logical   72332   25914 

#### sobreescribo xb5, ahora estara filtrado

xb5 <- xb5[isexpr,]


dim(xb5)
#[[1] 25914    17






#########################################  RNA-seq analysis is easy as 1-2-3 with limma, Glimma and edgeR (a partir de pag 4)


#Organising sample information

#eliminar "Aligned.sortedByCoord.out.bam" de los nombres de las muestras

samplenames <- gsub( "Aligned.sortedByCoord.out.bam", "", colnames(xb5))

samplenames

#[1] "B51-1_S42"  "B51-B1_S23" "B51-B_S9"   "B51_S8"     "B52-1_S24" 
 [6] "B52-B1_S43" "B52_S10"    "B53-1_S25"  "B53-B1_S45" "B53-B_S11" 
[11] "B53_S44"    "B54-2_S46"  "B54_S12"    "B5T-1_S26"  "B5T-B_S48" 
[16] "B5T-C_S13"  "B5T_S47"   
 



colnames(xb5) <- samplenames





########  ahora a      xb5$samples   le tengo que agregar dos columnas (treatmentB5 y vernalizedB5) que estan en el file targetB5


## entonces     primero creo los objetos 


treatmentB5 <- as.factor(targetB5$treatmentB5)
vernalizedB5 <- as.factor(targetB5$vernalizedB5)

# ahora lo agrego a xb5$samples

xb5$samples$treatmentB5<-treatmentB5
xb5$samples$vernalizedB5<-vernalizedB5

###  entonces aca me lo muestra
xb5$samples



############    Data pre-processing
#               Transformations from the raw-scale


#Here raw counts are converted to CPM and log-CPM values using the cpm function in edgeR

#creo los objetos cpm (cuentas por millon) y lcpm (el log en base 2 de cuentas por millon)

cpmB5 <- cpm(xb5)
lcpmB5 <- cpm(xb5, log=TRUE)


#cpm divide x$counts/lib.size y eso lo multiplica por 1 millon

#cpm, log true    calcula el log en base 2 de cpm 







#               Normalising gene expression distributions

#normalisation by the method of trimmed mean of M-values (TMM)12 is performed using the calc-NormFactors function in edgeR.
#When working with DGEList-objects, these normalisation factors are automatically stored in xb5$samples$norm.factors.

# [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1



xb5 <- calcNormFactors(xb5, method = "TMM")
xb5$samples$norm.factors
# [1] 0.93096068482894855922 1.03232411399618895231 0.93254199910683599484
 [4] 1.11963408942731557083 1.06858180810958836027 0.99816326413161471365
 [7] 1.05130221446693039589 1.00133174954428172398 1.09102286670105441679
[10] 1.04143738520930773106 1.03960716846785783396 1.08018876623457926733
[13] 1.05094363937364732031 0.95333686666397621234 0.82116362816553323256
[16] 0.89494201529435479792 0.94472801478281331899






#       aca se puede graficar normalizados vs no normalizados. No lo voy a hacer porque ya lo hice antes





#                               Unsupervised clustering of samples

#multi-dimensional scaling (MDS) plot shows similarities and dissimilarities between samples in an
#unsupervised manner so that one can have an idea of the extent to which differential expression can be detected
#before carrying out formal tests.




######### EMPIEZA Differential expression analysis uno por uno cada comparacion



















###############      ahora hago el analisis con CRIOLLA  



#usar targetCR y leerlo en R
targetCR <- read.delim(file= "targetCR", header=TRUE, sep="")

#ver la lista que me da
str(fcCR)
options(digits=20)
fcCR$stat


nrow(fcCR$counts)
#[1] 98246


###########################################   edgeR y limma  



#Create a DGEList object


library(limma)
library(edgeR)


xcr <- DGEList(counts=fcCR$counts, genes=fcCR$annotation[,c("GeneID","Length")])

###  mirar la tabla

head(xcr)

class(xcr)

#[1] "DGEList"
#attr(,"package")
#[1] "edgeR"



nrow(fcCR$counts)
#98246

dim(xcr)
#[[1] 98246    14  #son 14 muestras de CR



#Filtering. Only keep in the analysis those genes which had >10 reads per million mapped reads in at least two libraries.

isexpr <- rowSums(cpm(xcr) > 10) >= 2

summary(isexpr)

#  Mode   FALSE    TRUE 
logical   75355   22891 

#### sobreescribo xcr, ahora estara filtrado

xcr <- xcr[isexpr,]


dim(xcr)
#[[1] 22891    14







#########################################  RNA-seq analysis is easy as 1-2-3 with limma, Glimma and edgeR (a partir de pag 4)


#Organising sample information

#eliminar "Aligned.sortedByCoord.out.bam" de los nombres de las muestras

samplenames <- gsub( "Aligned.sortedByCoord.out.bam", "", colnames(xcr))

samplenames

#[1] "CR1-1_S50"  "CR1-B1_S14" "CR1-B_S51"  "CR1_S49"    "CR2-1_S27" 
 [6] "CR2-B_S52"  "CR2-E_S53"  "CR2_S15"    "CR3-B1_S28" "CR3-B_S54" 
[11] "CR3_S16"    "CRT-1_S29"  "CRT-B1_S18" "CRT-B_S17"
 



colnames(xcr) <- samplenames





########  ahora a      xcr$samples   le tengo que agregar dos columnas (treatmentCR y vernalizedCR) que estan en el file targetCR


## entonces     primero creo los objetos 


treatmentCR <- as.factor(targetCR$treatmentCR)
vernalizedCR <- as.factor(targetCR$vernalizedCR)

# ahora lo agrego a xcr$samples

xcr$samples$treatmentCR<-treatmentCR
xcr$samples$vernalizedCR<-vernalizedCR

###  entonces aca me lo muestra
xcr$samples



############    Data pre-processing
#               Transformations from the raw-scale


#Here raw counts are converted to CPM and log-CPM values using the cpm function in edgeR

#creo los objetos cpm (cuentas por millon) y lcpm (el log en base 2 de cuentas por millon)

cpmCR <- cpm(xcr)
lcpmCR <- cpm(xcr, log=TRUE)


#cpm divide x$counts/lib.size y eso lo multiplica por 1 millon

#cpm, log true    calcula el log en base 2 de cpm 







#               Normalising gene expression distributions

#normalisation by the method of trimmed mean of M-values (TMM)12 is performed using the calc-NormFactors function in edgeR.
#When working with DGEList-objects, these normalisation factors are automatically stored in xcr$samples$norm.factors.

# [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1




xcr <- calcNormFactors(xcr, method = "TMM")
xcr$samples$norm.factors
# [1] 1.03992762080536405023 1.04150127302567407916 0.96489877327217510317
 [4] 1.11605710675226754702 0.89312648700676300351 1.03462624840164840734
 [7] 1.05135738891878416368 0.98097065251466641911 0.97987276849789817224
[10] 1.07561998610592124415 1.14117014254694115749 0.91811314868498350439
[13] 0.86533055312203421838 0.94147515818701454915







#       aca se puede graficar normalizados vs no normalizados. No lo voy a hacer porque ya lo hice antes





#                               Unsupervised clustering of samples

#multi-dimensional scaling (MDS) plot shows similarities and dissimilarities between samples in an
#unsupervised manner so that one can have an idea of the extent to which differential expression can be detected
#before carrying out formal tests.




######### EMPIEZA Differential expression analysis uno por uno cada comparacion







